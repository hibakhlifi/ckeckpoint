ALGORITHM SUM
//SOLUTION1
VAR
    Set1 : INTEGER[] := {12, 13, 6, 10};
    Set2: INTEGER[] := {13, 10, 16, 15};
    sum : INTEGER := 0;
    res := true;
BEGIN
     FOR i FROM 0 TO Set1.lenght STEP 1  DO
        FOR j FROM 0 TO Set2.lenght STEP 1  DO
        IF (Set1[i]:= Set2[w]) THEN
                res := true;
                Set1 += Set1[i];
                b += Set2[w];
                sum = Set1 + Set2;
            END_IF
        END_FOR
            IF (Set1[i] <> Set2[w]) THEN
                res := true;
            END_IF
    END_FOR
END

//SOLUTION2

 ALGORITHM sum_ov
VAR
    h:HASH_TABLE<INTEGER,INTEGER>;
    i,sum,count:INTEGER;
    set1: ARRAY_OF INTEGER[4];
    set2 : ARRAY_OF INTEGER[4];
BEGIN
  
    sum:=0;
  
   FOR i FROM 0 TO set1.length-1 STEP1 DO
       IF(h.lookup(set1[i]=true)) THEN
       count:=h.get(set1[i])
       h.insert(set1[i],count+1)
         ELSE
        h.insert(set1[i],1);
       END_IF
   END_FOR
   FOR i FROM 0 TO set2.length-1 STEP1  DO
       IF(h.lookup(set2[i]=true)) THEN
       count:=h.get(set2[i])
       h.insert(set2[i],count+1)
         ELSE
        h.insert(set2[i],1);
       END_IF
   END_FOR

   FOR i FROM 0 TO set1.length-1 STEP1 DO
        IF (h.get(set1[i])=1) THEN
            sum=sum+set1[i]
        END_IF   
   END_FOR
   

 writeln("sum is ",sum)

END


//SOLUTION2
VAR
    Set1 : INTEGER[] := {12, 13, 6, 10};
    Set2: INTEGER[] := {13, 10, 16, 15};
    sum : INTEGER := 0;
    i, j: INTEGER;
BEGIN
     FOR i FROM 0 TO Set1.lenght STEP 1  DO
        FOR j FROM 0 TO Set2.lenght STEP 1  DO
         WHILE (Set1[i]:= Set2[w]) THEN
                Set1 += Set1[i];
                Set1 += Set2[j];
                sum = Set1 + Set2;
            END_WHILE
         END_FOR
    END_FOR
END


